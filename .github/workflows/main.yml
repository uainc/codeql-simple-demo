name: "Code scanning - action"

on:
  push:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  CodeQL-Build:

    strategy:
      fail-fast: false

    # CodeQL runs on ubuntu-latest and windows-latest
    #runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      # Override language selection by uncommenting this and choosing your languages
      with:
         languages: cpp, java

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see bellow)
    # custom build steps .
    # - name: Autobuild
    #  uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    - run: make
    - run: mvn -f dbconnect/pom.xml package

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
  
    - name: Upload CodeQL database
      uses: actions/upload-artifact@v2
      with:
        name: codeql-code-cpp-db
        # path: ${{ env.RUNNER_TEMP }}/codeql_databases/java # alternative
        path: ../../_temp/codeql_databases/cpp

  Super-Linter:

    strategy:
      fail-fast: false

    # Super-lint runs on ubuntu-latest and windows-latest
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
        
    - name: Super-Linter
      uses: github/super-linter@v2.1.0
